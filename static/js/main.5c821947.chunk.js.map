{"version":3,"sources":["api/fetchAPI.js","Results.js","assets/background.jpg","App.js","index.js"],"names":["fetchAPI","query","a","axios","get","params","title","encodeURI","response","data","Results","Container","entries","childItem","ii","count","push","Carousel","Item","interval","Card","className","Header","API","Body","Title","Description","Text","Auth","HTTPS","Button","variant","target","href","Link","createItems","Styles","styled","div","background","App","useState","setQuery","APIs","setAPIs","onLine","setOnLine","search","e","key","useEffect","window","addEventListener","console","log","Jumbotron","fluid","type","placeholder","value","onChange","onKeyPress","ReactDOM","render","document","getElementById"],"mappings":"qNAIaA,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACGC,IAAMC,IAHrB,qCAG8B,CAClCC,OAAQ,CACJC,MAAOC,UAAUN,MAHL,cACdO,EADc,yBAMbA,EAASC,MANI,2CAAH,sD,+BCkCNC,EAhCC,SAAC,GAAc,IAAZD,EAAW,EAAXA,KAyBf,OACE,cAACE,EAAA,EAAD,UAzBoB,SAACF,GAGrB,IAFA,IAAMG,EAAUH,EAAKG,QACjBC,EAAY,GACPC,EAAK,EAAGA,EAAKL,EAAKM,MAAOD,IAChCD,EAAUG,KACR,cAACC,EAAA,EAASC,KAAV,CAAeC,SAAU,IAAzB,SACE,eAACC,EAAA,EAAD,CAAMC,UAAU,gBAAhB,UACE,eAACD,EAAA,EAAKE,OAAN,CAAaD,UAAU,QAAvB,UAAgCP,EAAG,EAAnC,WAA8CF,EAAQE,GAAIS,OAC1D,eAACH,EAAA,EAAKI,KAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,CAAYJ,UAAU,QAAtB,SAA+BT,EAAQE,GAAIY,cAC3C,eAACN,EAAA,EAAKO,KAAN,WACCf,EAAQE,GAAIc,MAAQ,sEAAuChB,EAAQE,GAAIc,KAAnD,SACpB,4DAA+BhB,EAAQE,GAAIe,MAAZ,sCAA/B,UAED,cAACC,EAAA,EAAD,CAAQC,QAAQ,OAAOC,OAAO,SAASC,KAAMrB,EAAQE,GAAIoB,KAAzD,qCAT8BpB,IAiB1C,OAAO,cAACG,EAAA,EAAD,UAAWJ,IAIXsB,CAAY1B,M,gBCjCR,MAA0B,uC,m3CCQzC,IAAM2B,EAASC,IAAOC,IAAV,IAIUC,GAwHPC,MAvDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNxC,EADM,KACCyC,EADD,OAEWD,mBAAS,IAFpB,mBAENE,EAFM,KAEAC,EAFA,OAGeH,oBAAS,GAHxB,mBAGNI,EAHM,KAGEC,EAHF,KAKPC,EAAM,uCAAG,WAAOC,GAAP,eAAA9C,EAAA,yDACC,UAAV8C,EAAEC,IADO,gCAEQjD,EAASC,GAFjB,OAELQ,EAFK,OAGXmC,EAAQnC,GACRiC,EAAS,IAJE,2CAAH,sDAoBZ,OAZAQ,qBAAU,WACRC,OAAOC,iBAAiB,UAAU,SAASJ,GACzCK,QAAQC,IAAI,kBACZR,GAAU,MACT,GACHK,OAAOC,iBAAiB,WAAW,SAASJ,GAExCK,QAAQC,IAAI,mBACZR,GAAU,MACT,KACL,CAACA,IAGD,8BACE,cAACV,EAAD,UACE,eAACmB,EAAA,EAAD,CAAWC,OAAK,EAAhB,WACIX,GACA,cAACzB,EAAA,EAAD,CAAMC,UAAU,YAAhB,SACE,gFAGJ,cAACD,EAAA,EAAD,CAAMC,UAAS,iBAAYsB,EAAK5B,OAAS,SAAzC,SACE,eAACK,EAAA,EAAKI,KAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,yCACA,cAACL,EAAA,EAAKO,KAAN,UACE,uBACE8B,KAAK,OACLC,YAAY,8BACZC,MAAO1D,EACP2D,SAAU,SAACZ,GAAD,OAAON,EAASM,EAAEhB,OAAO2B,QACnCE,WAAYd,WAKnBJ,EAAK5B,OAAS,cAAC,EAAD,CAASN,KAAMkC,Y,MCxHxCmB,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.5c821947.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst URL = 'https://api.publicapis.org/entries';\r\n\r\nexport const fetchAPI = async (query) => {\r\n    const response = await axios.get(URL, {\r\n        params: {\r\n            title: encodeURI(query)\r\n        }\r\n    });\r\n    return response.data;\r\n}","import React from \"react\";\r\nimport Container from \"react-bootstrap/esm/Container\";\r\nimport Card from \"react-bootstrap/esm/Card\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport Carousel from \"react-bootstrap/esm/Carousel\";\r\n\r\nconst Results = ({ data }) => {\r\n      const createItems = (data) => {\r\n      const entries = data.entries;\r\n      let childItem = [];\r\n      for (let ii = 0; ii < data.count; ii++) {\r\n        childItem.push(\r\n          <Carousel.Item interval={1000} key={ii}>\r\n            <Card className=\"d-block w-100\">\r\n              <Card.Header className=\"cardH\">{ii+1} - API: {entries[ii].API}</Card.Header>\r\n              <Card.Body>\r\n                <Card.Title className=\"cardH\">{entries[ii].Description}</Card.Title>\r\n                <Card.Text>\r\n                {entries[ii].Auth && <span>{`Its authentication method is ${entries[ii].Auth}.  `}</span>}\r\n                 <span>It returns entries that {entries[ii].HTTPS ? `support HTTPS` : `don't support HTTPS`}.</span>\r\n                </Card.Text>\r\n                <Button variant=\"info\" target=\"_blank\" href={entries[ii].Link}>\r\n                  Link to API page\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Carousel.Item>\r\n        );\r\n      }\r\n    return <Carousel>{childItem}</Carousel>\r\n    };\r\n    return (\r\n      <Container>\r\n          {createItems(data)}\r\n      </Container>\r\n    );\r\n};\r\n\r\nexport default Results;\r\n","export default __webpack_public_path__ + \"static/media/background.20d2084f.jpg\";","import React, { useState, useEffect } from \"react\";\nimport { fetchAPI } from \"./api/fetchAPI\";\nimport Results from \"./Results\";\nimport styled from \"styled-components\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Card from \"react-bootstrap/Card\";\nimport background from \"./assets/background.jpg\";\n\nconst Styles = styled.div`\n\n  .jumbotron {\n    text-align: center;\n    background: url(${background}) no-repeat bottom;\n    background-size: cover;\n    height: 100vh;\n    position: relative;\n    color: #eee;\n    z-index: 0;\n  }\n  .search {\n    background-color: #fff;\n    opacity: 0.85;\n    position: relative;\n    top: 160px;\n    margin: auto;\n    padding: 20px;\n    width: 80%;\n    border-radius: 10px;\n    z-index: 1;\n    color: black;\n    transition: transform ease 0.5s;\n    box-shadow: 5px 5px 15px #ccc;\n    &-title {\n      font-size: 25px;\n      font-weight: bolder;\n    }\n  }\n  .go-up {\n    transform: translateY(-150px) scale(0.8);\n    transition: transform ease 0.5s;\n  }\n  input {\n    font-size: 18px;\n    border-radius: 5px;\n    padding: 5px;\n    width: 80%;\n  }\n\n  .carousel {\n    background-color: #fff;\n    opacity: 0.85;\n    top: 20px;\n    margin: auto;\n    padding: 20px;\n    border-radius: 10px;\n    z-index: 1;\n    width: 80%;\n    color: black;\n    box-shadow: 5px 5px 15px #ccc;\n    transition: opacity 0.5s;\n    &-item {\n      position: relative;\n      font-size: calc(30% + 1vw + 1vh);\n    }\n  }\n  .cardH {\n    font-size: calc(30% + 1vw + 1vh);\n    font-weight: bold;\n  }\n  .noNetwork {\n    background-color: orange;\n    width: 100%;\n    color: black;\n    z-index: 2;\n  }\n`;\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [APIs, setAPIs] = useState({});\n  const [onLine, setOnLine] = useState(true);  \n\n  const search = async (e) => {\n    if (e.key === \"Enter\") {\n      const data = await fetchAPI(query);\n      setAPIs(data);\n      setQuery(\"\");\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('online', function(e) {\n      console.log(\"You are online\");\n      setOnLine(true);\n    }, false);\n    window.addEventListener('offline', function(e) {\n        // Queue up events for server.\n        console.log(\"You are offline\");\n        setOnLine(false);\n      }, false);\n  },[setOnLine]);\n\n  return (\n    <div>\n      <Styles>\n        <Jumbotron fluid>\n          {!onLine && (\n            <Card className=\"noNetwork\">\n              <p> No network! Please go online to use RoboAPP!</p>\n            </Card>\n          )}\n          <Card className={`search ${APIs.count && \"go-up\"}`}>\n            <Card.Body>\n              <Card.Title>RoboAPP for searching APIs</Card.Title>\n              <Card.Text>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search APIs by keywords ...\"\n                  value={query}\n                  onChange={(e) => setQuery(e.target.value)}\n                  onKeyPress={search}\n                />\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          {APIs.count && <Results data={APIs} />}\n        </Jumbotron>\n      </Styles>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}